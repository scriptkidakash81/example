name: Semgrep

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write  # Allow commenting on PRs
      issues: write          # For creating/updating comments
	
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Semgrep and jq
        run: |
          sudo apt install python3-venv jq
          python3 -m venv .venv
          .venv/bin/pip install semgrep
		
      - name: Run Semgrep
        run: |
          source .venv/bin/activate
          semgrep --config auto --json-output=results.json --no-error
          cat results.json | jq .results > pretty-results.json
		
      - name: Display Semgrep JSON Output
        run: |
         echo "Displaying Semgrep results..."
         cat pretty-results.json
         
      - name: Check Semgrep Results and Add Comment on PR
        id: check_and_comment
        run: |
          # Check for findings in Semgrep output
          if grep -q '"severity": "ERROR"' pretty-results.json; then
            echo "Warnings found"
            FINDINGS=true
          else
            echo "No vulnerabilities found"
            FINDINGS=false
          fi

      - name: Add Comment on PR if vulnerabilities found
        if: ${{ steps.check_and_comment.outputs.FINDINGS == 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const comment = `**Semgrep Findings:** Critical vulnerabilities found in the code. Please address them before merging.`;
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: prNumber,
              body: comment
            });

      - name: Add Comment on PR if scan passes
        if: ${{ steps.check_and_comment.outputs.FINDINGS == 'false' }}
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const comment = `Semgrep scan passed. No vulnerabilities found.`;
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: prNumber,
              body: comment
            });
