name: GoSec new

# Run workflow each time code is pushed to your repository.
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write  # Allow writing to PRs
      issues: write         # Allow creating comments on issues

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Security Scan with GoSec
        id: gosec_scan
        uses: securego/gosec@master
        with:
          # Running GoSec with arguments to filter on severity and confidence
          args: '-severity high -confidence high -no-fail -fmt json -out results.json ./...'

      - name: Display Raw GoSec JSON Output
        run: |
          echo "Displaying raw GoSec results..."
          cat results.json

      - name: Inspect the Structure of JSON 
        run: |
          # Let's display the 'Issues' array to understand its structure
          echo "Inspecting the Issues structure..."
          jq '.Issues' results.json

      - name: Add comment on PR if HIGH vulnerabilities are found
        run: |
          if jq '.Issues | map(select(.Severity == "HIGH")) | length > 0' results.json; then
            echo "HIGH vulnerabilities found. Adding comment to PR."
            comment="**GoSec Findings:** HIGH vulnerabilities found in the code. Please address them before merging."
          else
            echo "No HIGH vulnerabilities found. Scan passed."
            comment="**GoSec Scan Successful:** No HIGH vulnerabilities found in the code."
          fi
          
          # Extract PR number from the GitHub context (only for PR-related events)
          pr_number=${{ github.event.pull_request.number }}

          # Add comment to the PR using GitHub API (using the default GITHUB_TOKEN)
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d '{"body": "'"$comment"'"}' https://api.github.com/repos/${GITHUB_REPOSITORY}/issues/$pr_number/comments
