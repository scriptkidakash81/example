name: GoSec new

# Run workflow each time code is pushed to your repository.
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Security Scan with GoSec
        id: gosec_scan
        uses: securego/gosec@master
        with:
          # Running GoSec with arguments to filter on severity and confidence
          args: '-severity high -confidence high -no-fail -fmt json -out results.json ./...'

      - name: Display Raw GoSec JSON Output
        run: |
          echo "Displaying raw GoSec results..."
          cat results.json

      - name: Inspect the Structure of JSON
        run: |
          # Let's display the 'Issues' array to understand its structure
          echo "Inspecting the Issues structure..."
          jq '.Issues' results.json

      - name: Add comment on PR if findings are found
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const fs = require('fs');
            const results = JSON.parse(fs.readFileSync('results.json', 'utf8'));
            const highFindings = results.Issues.filter(issue => issue.severity === 'HIGH');

            // Comment if high-severity findings are found
            if (highFindings.length > 0) {
              const comment = `**GoSec Findings:** Critical vulnerabilities found in the code. Please address them before merging.`;
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: prNumber,
                body: comment
              });
            } else {
              // If no findings, comment that the scan passed
              const comment = `**GoSec Scan Passed:** No critical vulnerabilities found.`;
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: prNumber,
                body: comment
              });
            }
